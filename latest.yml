apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: <dockerhub_username>/mongodb-app:latest  # Replace <dockerhub_username> with your Docker Hub username
        ports:
        - containerPort: 27017

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ratings-app
  template:
    metadata:
      labels:
        app: ratings-app
    spec:
      containers:
      - name: ratings-app
        image: <dockerhub_username>/ratings-app:latest  # Replace <dockerhub_username> with your Docker Hub username
        ports:
        - containerPort: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reservation-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reservation-app
  template:
    metadata:
      labels:
        app: reservation-app
    spec:
      containers:
      - name: reservation-app
        image: <dockerhub_username>/reservation-app:latest  # Replace <dockerhub_username> with your Docker Hub username
        ports:
        - containerPort: 5001

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurants-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restaurants-app
  template:
    metadata:
      labels:
        app: restaurants-app
    spec:
      containers:
      - name: restaurants-app
        image: <dockerhub_username>/restaurants-app:latest  # Replace <dockerhub_username> with your Docker Hub username
        ports:
        - containerPort: 5002

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: users-app
  template:
    metadata:
      labels:
        app: users-app
    spec:
      containers:
      - name: users-app
        image: <dockerhub_username>/users-app:latest  # Replace <dockerhub_username> with your Docker Hub username
        ports:
        - containerPort: 5003

# kubectl apply -f <path_to_the_yaml_file>
##
##
# Make sure you have your Kubernetes cluster up and running before applying the YAML file.
# Install Kubernetes
# Configure kubectl --> gcloud container clusters get-credentials <cluster_name> --zone <zone> --project <project_name>
# Verify Cluster: kubectl cluster-info
# Check Nodes: kubectl get nodes
# Lastly, Apply yaml file: kubectl apply -f <path_to_the_yaml_file>


